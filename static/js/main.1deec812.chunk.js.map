{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","className","styles","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedbackType","console","error","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,qHC+BbC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,wCACQ,+BAAOJ,OAEf,2CACW,+BAAOC,OAElB,uCACO,+BAAOC,OAEd,yCACS,+BAAOC,OAEhB,qDACqB,+BAAOC,IAD5B,Y,gBCASC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCcQI,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACnB,wBAEEC,KAAK,SACLR,UAAWC,IAAOQ,OAClBC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GALIA,O,gBCIII,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGZ,UAAWC,IAAOW,QAArB,SAA+BA,KCyDzBC,MAvDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAYKC,EAAqB,WAE1B,OAAO1B,EAAOC,EAAUC,GAWtB,OACE,qCACE,wDACA,cAAC,EAAD,CAASI,MAAM,yDAAf,SACE,cAAC,EAAD,CACEM,QA5BY,CAAC,OAAQ,UAAW,OA6BhCC,gBA3Bc,SAACc,GACvB,MAAqB,SAAjBA,EAAgCJ,GAAQ,SAACvB,GAAD,OAAUA,EAAO,KACxC,YAAjB2B,EAAmCH,GAAW,SAACvB,GAAD,OAAaA,EAAU,KACpD,QAAjB0B,EAA+BF,GAAO,SAACvB,GAAD,OAASA,EAAM,KAElD0B,QAAQC,MAAM,2BA0BjB,cAAC,EAAD,CAASvB,MAAM,aAAf,SACGoB,IAAuB,EACtB,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBAxBuB0B,KAAKC,MACpC/B,GAA+B,IAAvB0B,OAE2B,IAwB7B,cAAC,EAAD,CAAcN,QAAQ,4BChDlCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1deec812.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import PropTypes from 'prop-types'\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li>\n        Good: <span>{good}</span>\n      </li>\n      <li>\n        Neutral: <span>{neutral}</span>\n      </li>\n      <li>\n        Bad: <span>{bad}</span>\n      </li>\n      <li>\n        Total: <span>{total}</span>\n      </li>\n      <li>\n        Positive feedback: <span>{positivePercentage}</span> %\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styles from '../Section/Section.module.css'\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title:PropTypes.string,\n}\n\nexport default Section;\n","import styles from \"../FeedbackOptions/FeedbackOptions.module.css\";\nimport PropTypes from 'prop-types'\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return options.map((option) => (\n    <button\n      key={option}\n      type=\"button\"\n      className={styles.button}\n      onClick={() => onLeaveFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  \n};\nexport default FeedbackOptions;\n","import styles from '../Notification/Notification.module.css'\nimport PropTypes from 'prop-types'\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n}\nexport default Notification;\n","import React, { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from \"./components/Notification/Notification\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedbackTypes = ['good', 'neutral', 'bad'];\n\n  const onLeaveFeedback = (feedbackType) => {\n    if (feedbackType === 'good') return setGood((good) => good + 1);\n    if (feedbackType === 'neutral') return setNeutral((neutral) => neutral + 1);\n    if (feedbackType === 'bad') return setBad((bad) => bad + 1);\n\n    return console.error('feedbackType error');\n  };\n\n const countTotalFeedback = () => {\n    //общеe количествo собранных отзывов из всех категорий\n  return good + neutral + bad;\n };\n  \n    const countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercentage = Math.round(\n      good / (countTotalFeedback() * 0.01)\n    );\n    return positiveFeedbackPercentage || 0; // || возвращает выражение справа, если левая часть ложная\n    };\n  \n  \n    return (\n      <>\n        <h1> Our visitors feedback</h1>\n        <Section title=\"Please, leave your feedback! This is important for us!\">\n          <FeedbackOptions\n            options={feedbackTypes}\n            onLeaveFeedback={onLeaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"STATISTICS\">\n          {countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}